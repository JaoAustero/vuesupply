//  Name:            Flex
//  Description:     Utilities for flex
//
//  Component:       `vh-flex-*`
//
// ========================================================================

/* ========================================================================
   Component: Flex
 ========================================================================== */

.vh-flex{
    display: flex;
}

.vh-flex-inline{
    display: inline-flex;
}

/*
 * Remove pseudo elements created by micro clearfix as precautions
 */

.vh-flex::before,
.vh-flex::after,
.vh-flex-inline::before,
.vh-flex-inline::after{
    display: none;
}



/* Alignment
 ========================================================================== */

/*
 * Align items along the main axis of the current line of the flex container.
 * Row: Horizontal
 */

@include create-flex-alignment;

/*
 * Align items in the cross of the current line of the flex container
 * Row: Vertical
 */


// Default

.vh-flex-stretch{
    align-items: stretch;
}

.vh-flex-top{
    align-items: flex-start;
}

.vh-flex-middle{
    align-items: center;
}

.vh-flex-bottom{
    align-items: flex-end;
}



/* Direction
 ========================================================================== */

.vh-flex-row{
    flex-direction: row;
}

.vh-flex-row-reverse{
    flex-direction: row-reverse;
}

.vh-flex-column{
    flex-direction: column;
}

.vh-flex-column-reverse{
    flex-direction: column-reverse;
}



/* Wrap
 ========================================================================== */

// Default
.vh-flex-nowrap{
    flex-wrap: nowrap;
}

.vh-flex-wrap{
    flex-wrap: wrap;
}

.vh-flex-wrap-reverse{
    flex-wrap: wrap-reverse;
}

// Default
.vh-flex-wrap-stretch{ 
    align-content: stretch; 
}

.vh-flex-wrap-top{ 
    align-content: flex-start; 
}

.vh-flex-wrap-middle{ 
    align-content: center; 
}

.vh-flex-wrap-bottom{ 
    align-content: flex-end; 
}

.vh-flex-wrap-between{
    align-content: space-between;
}

.vh-flex-wrap-around{
    align-content: space-around;
}



/* Item Ordering
 ========================================================================== */

.vh-flex-first{
    order: -1;
}

.vh-flex-last{
    order: 99;
}

@include respond-to(small){
    .vh-flex-first\@s{
        order: -1;
    }
    
    .vh-flex-last\@s{
        order: 99;
    }
}

@include respond-to(medium){
    .vh-flex-first\@m{
        order: -1;
    }
    
    .vh-flex-last\@m{
        order: 99;
    }
}

@include respond-to(large){
    .vh-flex-first\@l{
        order: -1;
    }
    
    .vh-flex-last\@l{
        order: 99;
    }
}

@include respond-to(xlarge){
    .vh-flex-first\@xl{
        order: -1;
    }
    
    .vh-flex-last\@xl{
        order: 99;
    }
}



/* Item Dimensions
 ========================================================================== */

/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */

/*
 * No flex: 0 0 auto
 * Content dimensions
 */

.vh-flex-none{
    flex: none;
}

/*
 * Relative flex 1 1 auto
 * Space is allocated considering content
 */

.vh-flex-auto{
    flex: auto;
}

/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */

.vh-flex-1{
    flex: 1;
}